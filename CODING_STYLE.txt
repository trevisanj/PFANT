Sketch of a coding style manual

This file:
- Restrict to 80 columns.

Format
======

  Indents
  -------
  - Beginning of line: use 6 spaces (not tabs) at the beginning of a line,
    since most editors seem not to understand the old tabbed format.
  - IF, DO etc indents: let us use only 2 spaces because we are restricted
    to 72 columns.
  - Indents at continuation lines: no fixed rule; as a suggestion, put at
    least one space between the continuation character and the continuation
    line. 
    Suggestion: continue with a 1-space indentation from the beginning line, 
                i.e.:
    
            WRITE (*,*) 'A equals ', A, '; B equals ', B, '; C equals ',
     +       C, 'D equals ', D            
             ^1-space indentation after beginning line
     ^6th column
     
  
  Number of columns
  -----------------
  - Restrict code to 72 columns (comments may surpass this)

  Continuation
  ------------
  No fixed rule; as a suggestion, use "@" when the line contains a formula to
  avoid the risk of messing with the formula because "@" cannot be part of a
  formula, whereas the usual continuation characters ([+_0-9]) can be part of
  a formula.
  

Common blocks
=============
Do NOT use common blocks! Use Fortran MODULE to declare globals!


Data types
==========
REAL*4 vs. REAL*8
As a thought (not put in practice yet):
"If you must use floating point, use double precision unless you have reason
to be concerned about memory use (your program uses large arrays) and you do
not need much precision. Modern computers do not take significantly longer to
process double precision values than they do to process reals." [1]


Programming
===========

  Logging (i.e., printing things on the screen)
  -------
  For outputting messages on the screen, use the routines in the LOGGING
  module (not just WRITE or PRINT). This may give a bit more work
  (may require one extra line of code if the string is formatted), but
  there are good reasons. for that.
  There are different routines to be used, such as
  LOG_CRITICAL(), LOG_ERROR(), LOG_WARNING(), LOG_INFO(), LOG_DEBUG(), and
  logging can be silenced and/or sent to specific logging file using
  command-line config options.

